'File Name:AutoSign_New.vbs
'Purpose: Call this script to automatically sign all the executables
'Usage: cscript autosign.vbs -s <SourcePath> -e <Extensions> [-m <MailList>]
'Parameters:
'  -s <SourcePath>: specify the path that put all the files for signing.
'  -e <Extensions>: specify the file extensions for signing. the extensions 
'          are seperated by semicolons (;)
'  -m <MailList>: specify the mail addresses that will receive the sign results.
'File Version:
'  Mar.2,2007 Initial version by Jarvis Bao
'  May.21,2007  Updated by Jarvis Bao.
Option Explicit

'Step 1: Get arguments and initialize
Dim sPath
Dim sExtensions
Dim aExtensions
Dim iCount
Dim i
Dim objFSO
Dim objFolder
Dim objTempFile
Dim sTmpFileList
Dim sUnsignedFileList
Dim sArgument
Dim sMailList
Dim sCommand
Dim sSignedFile
Dim sMailBodyFile
Dim sMailTitle
Dim g_bForce

sMailList=""
sExtensions=""
sPath=""
i=0
iCount=0
g_bForce=False
while i<WScript.Arguments.count
    sArgument=WScript.Arguments.item(i)
    select case LCase(sArgument)
    case "-s":
        sPath=WScript.Arguments.item(i+1)
        i=i+1
    case "-e":
        sExtensions=WScript.Arguments.item(i+1)
        aExtensions=Split(sExtensions,";")
        iCount=UBound(aExtensions)
        i=i+1
    case "-m":
        sMailList=WScript.Arguments.item(i+1)
        i=i+1
    case "-f":
        g_bForce=True
    end select
    i=i+1
wend

if sExtensions="" or sPath="" then
    PrintHelp
end if

'Step 2: Find out all the files that are not signed and created by ArcSoft
set objFSO=CreateObject("Scripting.FileSystemObject")
sTmpFileList=GetTempFile(objFSO)
sUnsignedFileList=GetTempFile(objFSO)
sSignedFile=GetTempFile(objFSO)
sMailBodyFile=GetTempFile(objFSO)

if not objFSO.FolderExists(sPath) then
    WScript.echo "Folder:" &sPath & " does not exist"
    PrintUsage
end if

'sCommand="ConnectServer.bat"
'ShellRun sCommand

set objTempFile=objFSO.CreateTextFile(sUnsignedFileList,True)
objTempFile.Close()
set objTempFile=Nothing
set objFolder=objFSO.GetFolder(sPath)
set objTempFile=objFSO.CreateTextFile(sTmpFileList, True)
if objTempFile is Nothing then
    WScript.Quit
end if
For i=0 to iCount 
    Dim sExt
    sExt=aExtensions(i)
    'Find out all the files under path with specific extensions
    call SearchFiles (objFolder, sExt, objTempFile)
Next
objTempFile.Close
'Find out all the files that are not signed and created by ArcSoft
GetUnSignedFiles sTmpFileList, sUnsignedFileList

'Step 3: Sign all the files that are not signed and created by ArcSoft
SignArcSoftFiles sUnSignedFileList, sSignedFile
'DeleteFile sUnsignedFileList

if not sMailList="" then
    'sCommand="cscript autocheck.vbs " & sPath & " " & sExtensions
    'ShellRun sCommand
    sMailTitle="""Automatic sign executable files"""
    sCommand="%comspec% /c echo Hi Guys, >" & sMailBodyFile
    ShellRun sCommand
    sCommand="%comspec% /c echo   The files under " & sPath & " with extensions {" & sExtensions & "} have been signed. >>" & sMailBodyFile
    ShellRun sCommand
    sCommand="%comspec% /c echo ===Unsigned files list before signing=== >>" & sMailBodyFile
    ShellRun sCommand
    sCommand="%comspec% /c type " & sUnsignedFileList & " >>" & sMailBodyFile
    ShellRun sCommand
    sCommand="%comspec% /c echo ===Signed files list=== >>" & sMailBodyFile
    ShellRun sCommand
    sCommand="%comspec% /c type " & sSignedFile & " >>" & sMailBodyFile
    ShellRun sCommand
    sCommand="%comspec% /c echo This mail is automatic generated by program, does not reply please. >>" & sMailBodyFile
    ShellRun sCommand
    sCommand="%comspec% /c echo {}>>" & sMailBodyFile
    ShellRun sCommand
    sCommand="%comspec% /c echo {}>>" & sMailBodyFile
    ShellRun sCommand
    sCommand="%comspec% /c echo ArcSoft Auto Build Team >>" & sMailBodyFile
    ShellRun sCommand
    
    'write log
    sCommand="%comspec% /c echo %date% >> Autosigned.log"
    ShellRun sCommand
    sCommand="%comspec% /c echo ----------------------------------------- >> Autosigned.log"
    ShellRun sCommand
    sCommand="%comspec% /c type " & sMailBodyFile & ">> Autosigned.log"
    ShellRun sCommand


    sCommand ="cscript d:\dailybuild\script\SendMail.vbs -sm mail.arcsoft.com.cn -u ldapuser -p Arcsoft1 -t " & sMailList & " -f ArcBuilder@arcsoft.com.cn " & _
                " -s " & sMailTitle & " -r " & sMailBodyFile
    ShellRun sCommand
    DeleteFile sMailBodyFile
end if

DeleteFile sUnsignedFileList
DeleteFile sSignedFile
DeleteFile sTmpFileList

Sub PrintHelp
    WScript.echo "AutoSign: automatically sign all the executables."
    WScript.echo "   cscript autosign.vbs -s <SourcePath> -e <Extensions> [-m <MailList>]"
    WScript.echo "   Arguments:"
    WScript.echo "     -s <SourcePath>: specify the path that put all the files for signing."
    WScript.echo "     -e <Extensions>: specify the file extensions for signing. the extensions"
    WScript.echo "           are seperated by semicolons (;)"
    WScript.echo "     -m <MailList>: specify the mail addresses that will receive the sign results."
    WScript.Quit
End Sub

Sub SearchFiles(objCurFolder, sExtension, objOutputFile)
    Dim objFile,objFiles, objSubFolders,objSubFolder
    Dim sFileName
    Dim lf,le,n

    'if objOutputFile is Nothing then
    '    Exit Sub
    'end if
    le=Len(sExtension)
    set objFiles=objCurFolder.Files
    For each objFile in objFiles
        sFileName=objFile.Name
        lf=Len(sFileName)
        n=InStrRev(LCase(sFileName),LCase(sExtension))
        if (n>0 and n+le=lf+1) then
            'Find the file with extension
            objOutputFile.WriteLine """" & objCurFolder.Path & "\" &sFileName & """"
	    'WScript.echo sFileName
        end if
    Next
    set objSubFolders=objCurFolder.SubFolders
    For each objSubFolder in objSubFolders
        SearchFiles objSubFolder, sExtension, objOutputFile
    Next
End Sub

Sub GetUnSignedFiles(sSourceFile, sOutFile)
    Dim objSourceFile, objFile
    Dim sTmpOutFile
    if not objFSO.FileExists(sSourceFile) then
        Exit Sub
    end if
    Set objSourceFile=objFSO.OpenTextFile(sSourceFile, 1)
    Set objFile=objFSO.OpenTextFile(sOutFile,8,True)  'ForAppending
    sTmpOutFile="pedump.tmp"
    Do Until objSourceFile.AtEndOfStream
	Dim sLine
	Dim sCommand
	sLine=objSourceFile.ReadLine()
        WScript.Echo sLine
	sCommand=".\bin\pedump.exe " & sLine & " >>" & sTmpOutFile
	ShellRun sCommand
	If Not IsFileSigned(sTmpOutFile) Then
            objFile.WriteLine sLine
	End If
	DeleteFile sTmpOutFile
    Loop
    objSourceFile.Close
    objFile.Close
End Sub

Sub ShellRun(sCommandStringToExecute)
    Dim oShellObject
    Dim iErr
    Set oShellObject = CreateObject("Wscript.Shell")
    oShellObject.Run "%comspec% /c " & sCommandStringToExecute, 0, True
    If iErr <> 0 Then 
        WScript.echo "Error:"&Err.Number
        Exit Sub 
    End If 
End Sub

Function IsFileSigned(sVerifyFile)
    Dim objFile
    Dim sCertificates,sTemp,sLine,sBuffer
    Dim n,l,iErrs

    if not objFSO.FileExists(sVerifyFile) then
        IsFileSigned=False
	Exit Function
    end if
    IsFileSigned=False
    set objFile=objFSO.OpenTextFile(sVerifyFile,1) 'ForReading
    sCertificates="Certificates:"
    on error resume next
    sBuffer=objFile.ReadAll()
    if InStr(sBuffer, sCertificates)>0 then
        IsFileSigned=True
    else
        IsFileSigned=False
    end if
    objFile.Close
End Function

Function IsFileCreatedByArcSoft(sFileName)
    Dim objTmpFile
    Dim sCommand
    Dim sTmpFile
    Dim sArcSoft
    Dim sBuffer
    Dim sInvalid
    Dim l

    'WScript.Echo sFileName
    'The sFileName contains quotation marks (") at the beginning and end of actual file name,
    'should be removed.
    l=Len(sFileName)
    if l<3 then
        IsFileCreatedByArcSoft=False
	Exit Function
    end if
    sBuffer=Mid(sFileName, 2, l-2)
    if not objFSO.FileExists(sBuffer) then
        'WScript.echo "File " & sBuffer & "does not exist!"
        IsFileCreatedByArcSoft=False
	Exit Function
    end if
    if InStr(LCase(sBuffer),"setup.exe") >0 then
        IsFileCreatedByArcSoft=True
        Exit Function
    end if
    sTmpFile="Version.tmp"
    if objFSO.FileExists(sTmpFile) then
        DeleteFile(sTmpFile)
    end if
    sArcSoft="ArcSoft"
    sInvalid="Invalid!"
    sCommand="D:\AutoSign\Bin\GetVersionInfo.exe " & sFileName & " >>" & sTmpFile
    ShellRun(sCommand)
    if not objFSO.FileExists(sTmpFile) then
        'WScript.echo "Can not get version info."
	IsFileCreatedByArcSoft=False
	Exit Function
    end if
    set objTmpFile=objFSO.OpenTextFile(sTmpFile,1)
    On Error Resume Next
    sBuffer=objTmpFile.ReadAll()
    if InStr(LCase(sBuffer), LCase(sArcSoft))>0 then
        IsFileCreatedByArcSoft=True
    elseif InStr(sBuffer,sInvalid)>0 then
        IsFileCreatedByArcSoft=True
    else
        'WScript.echo "File " & sFileName & " is not created by ArcSoft."
	IsFileCreatedByArcSoft=False
    end if
    objTmpFile.Close
    DeleteFile (sTmpFile)
End Function

Sub DeleteFile(strFile)
    Dim sCommand
    sCommand ="del " & strFile
    ShellRun(sCommand)
End Sub

Sub SignArcSoftFiles(sSourceFile,sSignedFile)
    Dim objSourceFile
    Dim sFileName
    Dim sCommand
    Dim sSignCommand

    if not objFSO.FileExists(sSourceFile) then
        WScript.echo "File " & sSourceFile & " does not exist."
	Exit Sub
    end if
    sSignCommand="D:\Tools\signtool sign /v /ac D:\Signtool\MSCV-VSClass3.cer" & _
		" /s my /n ArcSoft" & _
		" /t http://timestamp.verisign.com/scripts/timestamp.dll "
    set objSourceFile=objFSO.OpenTextFile(sSourceFile,1)
    Do Until objSourceFile.AtEndOfStream
	sFileName=objSourceFile.ReadLine()
	if IsFileCreatedByArcSoft(sFileName) or g_bForce then
	    'Remove the file's read-only attribute
            WScript.Echo "Sign file: " & sFileName
            sCommand="echo " & sFileName & " >>" & sSignedFile
            ShellRun sCommand
	    sCommand="Attrib -r " & sFileName
	    ShellRun sCommand
            'Sign files
	    sCommand=sSignCommand  & sFileName
	    ShellRun sCommand
	    'Set file as read-only file.
	    sCommand="Attrib +r " & sFileName
	end if
    Loop
End Sub

Function GetTempFolder(objFSO)
   Dim objFolder
   set objFolder=objFSO.GetSpecialFolder(2) 'Temp folder
   GetTempFolder=objFolder.Path
End Function

Function GetTempFile(objFSO)
    Dim objFolder
    Dim sTempFolder,sTempName
    set objFolder=objFSO.GetSpecialFolder(2) 'Temp folder
    sTempFolder=objFolder.Path
    sTempName=objFSO.GetTempName()
    GetTempFile=sTempFolder & "\" & sTempName
End Function
